{
  "hash": "030b9c50214a9e38b7611ada91a6983a",
  "result": {
    "markdown": "---\ntitle: Una variable categórica\neditor:\n    render-on-save: true\n---\n\n\n## El método `describe()`\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nspecies = penguins[[\"species\"]]\n```\n:::\n\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nspecies.describe()\n```\n\n::: {.cell-output .cell-output-display execution_count=54}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>species</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>344</td>\n    </tr>\n    <tr>\n      <th>unique</th>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>top</th>\n      <td>Adelie</td>\n    </tr>\n    <tr>\n      <th>freq</th>\n      <td>152</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n- [ ] Decir las funciones individuales.\n\n- [ ] ¿Hay diferencia entre convertirla a categórica (`astype(\"category\")`) o no ?\n\n## Tabla de frecuencias \n\nTabla de frecuencias absolutas:\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\nspecies_counts = penguins.value_counts(subset=\"species\")\nspecies_counts\n```\n\n::: {.cell-output .cell-output-display execution_count=55}\n```\nspecies\nAdelie       152\nGentoo       124\nChinstrap     68\ndtype: int64\n```\n:::\n:::\n\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\ntype(species_counts)\n```\n\n::: {.cell-output .cell-output-display execution_count=56}\n```\npandas.core.series.Series\n```\n:::\n:::\n\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\nspecies_counts.index\n```\n\n::: {.cell-output .cell-output-display execution_count=57}\n```\nIndex(['Adelie', 'Gentoo', 'Chinstrap'], dtype='object', name='species')\n```\n:::\n:::\n\n\n::: {#exr-1categorial-sex-counts}\nDetermina el número total de hembras y de machos. Almacena el resultado en una variable de nombre `sex_counts`.\n:::\n\nTabla de frecuencias relativas (proporciones):\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\nspecies_props = penguins.value_counts(\n    subset=\"species\",\n    normalize=True\n)\nspecies_props\n```\n\n::: {.cell-output .cell-output-display execution_count=58}\n```\nspecies\nAdelie       0.441860\nGentoo       0.360465\nChinstrap    0.197674\ndtype: float64\n```\n:::\n:::\n\n\nTabla de porcentajes:\n\n::: {.cell execution_count=8}\n``` {.python .cell-code}\n100*species_props\n```\n\n::: {.cell-output .cell-output-display execution_count=59}\n```\nspecies\nAdelie       44.186047\nGentoo       36.046512\nChinstrap    19.767442\ndtype: float64\n```\n:::\n:::\n\n\n## Diagrama de barras con `pandas`\n\n::: {.cell execution_count=9}\n``` {.python .cell-code}\nspecies_counts.plot.bar();\n```\n\n::: {.cell-output .cell-output-display}\n![](1categorical_files/figure-html/cell-10-output-1.png){width=575 height=481}\n:::\n:::\n\n\n::: {.cell execution_count=10}\n``` {.python .cell-code}\nspecies_counts.plot.barh();\n```\n\n::: {.cell-output .cell-output-display}\n![](1categorical_files/figure-html/cell-11-output-1.png){width=632 height=411}\n:::\n:::\n\n\n::: {#exr-1categorial-pd-sex-bar}\nUsa la variable `sex_counts` creada en el @exr-1categorial-sex-counts para crear un diagrama de barras mostrando el número total de hembras y de machos.\n:::\n\n::: {#exr-1categorial-pd-island}\nDetermina cuántos pingüinos hay en cada isla y dibuja un diagrama de barras con los resultados.\n:::\n\n\n## Diagrama de barras con `seaborn`\n\n::: {.cell execution_count=11}\n``` {.python .cell-code}\nsns.barplot(x=species_counts.index, y=species_counts);\n```\n\n::: {.cell-output .cell-output-display}\n![](1categorical_files/figure-html/cell-12-output-1.png){width=575 height=429}\n:::\n:::\n\n\n::: {.cell execution_count=12}\n``` {.python .cell-code}\nsns.countplot(data=penguins, x=\"species\");\n```\n\n::: {.cell-output .cell-output-display}\n![](1categorical_files/figure-html/cell-13-output-1.png){width=593 height=429}\n:::\n:::\n\n\n::: {.cell execution_count=13}\n``` {.python .cell-code}\nsns.countplot(data=penguins, x=\"species\", order = ['Chinstrap', 'Adelie', 'Gentoo']);\n```\n\n::: {.cell-output .cell-output-display}\n![](1categorical_files/figure-html/cell-14-output-1.png){width=593 height=429}\n:::\n:::\n\n\n::: {.cell execution_count=14}\n``` {.python .cell-code}\nsns.countplot(data=penguins, x=\"species\", order = species_counts.index);\n```\n\n::: {.cell-output .cell-output-display}\n![](1categorical_files/figure-html/cell-15-output-1.png){width=593 height=429}\n:::\n:::\n\n\n::: {.cell execution_count=15}\n``` {.python .cell-code}\nsns.countplot(data=penguins, y=\"species\");\n```\n\n::: {.cell-output .cell-output-display}\n![](1categorical_files/figure-html/cell-16-output-1.png){width=632 height=429}\n:::\n:::\n\n\n::: {#exr-1categorial-sns-countplot}\nUtiliza la función `countplot()`{.python} de la librería `seaborn`{.python} para crear diagramas de barras para\n\n- el número de hembras y machos\n- el número de pingüinos en cada isla\n\nsin crear previamente tablas de recuentos.\n:::\n\n### Personalización de los gráficos\n\nNo es difícil personalizar los gráficos indicando títulos y colores [^colors]. Por ejemplo:\n<!-- ```{python}\n#| fig-align: center\nax = species_counts.plot.bar(color=[\"tab:blue\", \"tab:orange\", \"tab:green\"])\nax.set(\n    title=\"Número de pingüinos de cada especie\",\n    xlabel=\"Especie\", \n    ylabel=\"Número de pingüinos\"\n);\n``` -->\n\n<!-- palette: deep, muted, pastel, bright, dark, and colorblind -->\n\n::: {.cell execution_count=16}\n``` {.python .cell-code}\nsns.countplot(data=penguins, x=\"species\", color=\"steelblue\");\n```\n\n::: {.cell-output .cell-output-display}\n![](1categorical_files/figure-html/cell-17-output-1.png){width=593 height=429}\n:::\n:::\n\n\n::: {.cell execution_count=17}\n``` {.python .cell-code}\nsns.countplot(data=penguins, x=\"species\", palette=[\"steelblue\", \"coral\", \"gold\"]);\n```\n\n::: {.cell-output .cell-output-display}\n![](1categorical_files/figure-html/cell-18-output-1.png){width=593 height=429}\n:::\n:::\n\n\n::: {.cell execution_count=18}\n``` {.python .cell-code}\nax = sns.countplot(data=penguins, x=\"species\", palette=\"pastel\")\nax.set(\n    title=\"Número de pingüinos de cada especie\",\n    xlabel=\"Especie\", \n    ylabel=\"Número de pingüinos\"\n);\n```\n\n::: {.cell-output .cell-output-display}\n![](1categorical_files/figure-html/cell-19-output-1.png){width=594 height=450 fig-align='center'}\n:::\n:::\n\n\nLa personalización de los gráficos no carece de importancia, siendo especialmente relevante dar títulos descriptivos a los ejes. No obstante, en esta práctica nos centraremos en los procedimientos para realizar los gráficos y en la mayoría de ocasiones omitiremos los detalles de personalización de los mismos, que pueden consultarse en la documentación de las librerías usadas. \n\n[^colors]: Puedes ver los colores disponibles [aquí](https://matplotlib.org/stable/tutorials/colors/colors.html).\n\n",
    "supporting": [
      "1categorical_files/figure-html"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}
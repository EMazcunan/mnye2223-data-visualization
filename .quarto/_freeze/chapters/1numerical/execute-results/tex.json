{
  "hash": "928598faf24191cc8aa782c98afde141",
  "result": {
    "markdown": "---\ntitle: Una variable numérica\neditor:\n    render-on-save: true\n---\n\n\nIgual que en el apartado anterior estudiamos una variable categórica, en este apartado se describen los métodos básicos para explorar y analizar una variable numérica. \n\nAnalizaremos en concreto la variable `body_mass_g` de nuestra hoja de datos, para conocer la distribución de los pesos de los pingüinos.\n\nEmpezamos seleccionando la variable en nuestra hoja de datos y almacenando el resultado en un nuevo objeto de nombre `mass`. \n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nmass = penguins[\"body_mass_g\"]\n```\n:::\n\n\n## El método `describe()`\n\nEl método `describe()` que usamos en la sección anterior para una variable categórica, también puede aplicarse a variables numéricas. \n\nSi lo aplicamos a `mass` obtenemos el siguiente resultado:\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nmass.describe()\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```{=tex}\n\\begin{tabular}{lr}\n\\toprule\n{} &  body\\_mass\\_g \\\\\n\\midrule\ncount &   342.000000 \\\\\nmean  &  4201.754386 \\\\\nstd   &   801.954536 \\\\\nmin   &  2700.000000 \\\\\n25\\%   &  3550.000000 \\\\\n50\\%   &  4050.000000 \\\\\n75\\%   &  4750.000000 \\\\\nmax   &  6300.000000 \\\\\n\\bottomrule\n\\end{tabular}\n```\n:::\n:::\n\n\nLa información que obtenemos de la salida anterior sobre la distribución del peso de los pingüinos es la siguiente:\n\nFrragmento de la salida | Significado\n----- | ------\n`count     342.000000` | Hay 342 valores no nulos, así que no se conoce el peso de dos pingüinos.\n`mean     4201.754386` | El peso medio de los pingüinos es $4$ kilogramos y $201$ gramos\n`std       801.954536` | La desviación estandar del peso de los pinguinos es $801$ gramos\n`min      2700.000000` | El pingüino que menos pesa pesa $2$ kilos y $700$ gramos.\n`25%      3550.000000` | El $25\\%$ de los pingüinos pesa menos de $3$ kilos y $550$ gramos (y el $75\\%$ restante más). Este valor se conoce como __cuantil 0.25__ o __primer cuartil__.\n`50%      4050.000000` | El $50\\%$ de los pingüinos pesa menos de $4$ kilos y $50$ gramos (y el $50\\%$ restante más).  Este valor se llama  __cuantil 0.5__, __segundo cuartil__ o __mediana__\n`75%      4750.000000` | El $75\\%$ de los pingüinos pesa menos de $4$ kilos y $750$ gramos (y el $25\\%$ restante más).  Este valor se llama __cuantil 0.75__ o __tercer cuartil__.\n`max      6300.000000` | El pingüino que más pesa pesa $6$ kilos y $300$ gramos. \n\n\n:::{#exr-1numerical-describe}\nUtiliza el método `describe()` para obtener información sobre la distribución de la longitud de las alas de los pingüinos.\n:::\n\n\n<!-- ```{python}\nmass_sorted = mass.sort_values()\n```\n-->\n<!-- ```{python}\nmass_sorted[84:94] \n```-->\n<!-- ```{python}\nmass_sorted[255:265]\n```  -->\n\n\n## Histograma\n\n<!-- - [ ] En `pandas` están `Dataframe.plot.hist()` y `Dataframe.hist()` -->\n\nLos __histogramas__ son uno de los gráficos más comunes e informativos para describir la distribución de una variable continua. Para crear un histograma se representa en el eje x el rango de valores de la variable, se divide ese rango en intervalos de la misma longitud, y se dibuja para cada intervalo una barra de altura igual al número de valores que caen en ese intervalo. \n\nEl siguiente código crea un histograma para el peso de los pingüinos:\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\nsns.histplot(data=penguins, x=\"body_mass_g\");\n```\n\n::: {.cell-output .cell-output-display}\n![](1numerical_files/figure-pdf/cell-5-output-1.pdf){}\n:::\n:::\n\n\n::: {.callout-note}\nPara realizar un histograma usa la función `histplot()` del paquete `seaborn`, e indica:\n\n- El nombre de la hoja de datos como valor del argumento `data`.\n- El nombre de la variable como valor del argumento `x`.\n:::\n\n\n:::{#exr-1numerical-histplot}\nRealiza un histograma para la longitud de las alas de los pingüinos.\n:::\n\n\n## Diagrama de caja y bigotes\n\n<!-- - [ ] En `pandas` están `Dataframe.plot.box()` y `Dataframe.boxplot()` -->\n\nOtro tipo de gráficos para variables numéricas son los llamados __diagramas de caja__ o __de caja y bigotes__.\n\nLa caja se construye usando los cuartiles de la variable. \n\nY los bigotes se extienden desde los extremos de la caja hasta los valores mínimo y máximo, exceptuando los valores que se clasifican como __outliers__. \n\n\n::::: {.content-visible when-format=\"html\" style=\"background-color:transparent;padding:10px\"}\n:::: {.columns}\n\n::: {.column width=\"15%\"}\n![](../img/easter-egg.png){width=\"100%\"}\n:::\n\n::: {.column width=\"5%\"}\n<!-- empty column to create gap -->\n:::\n\n::: {.column width=\"80%\"}\nSi llegas el primero a este punto de la práctica, avísame para que explique el criterio que se usa para determinar los outliers, y haga un diagrama de caja y bigotes en el que aparezca un outlier.\n:::\n::::\n:::::\n\n<!-- > The box shows the quartiles of the dataset while the whiskers extend to show the rest of the distribution, except for points that are determined to be “outliers” using a method that is a function of the inter-quartile range. -->\n\n\nEjecuta el siguiente código para crear un diagrama de caja y bigotes para el peso de los pingüinos.\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\nsns.boxplot(data=penguins, y=\"body_mass_g\");\n```\n\n::: {.cell-output .cell-output-display}\n![](1numerical_files/figure-pdf/cell-6-output-1.pdf){}\n:::\n:::\n\n\n::: {.callout-note}\nPara realizar un diagrama de caja y bigotes usa la función `histplot()` del paquete `seaborn` e indica:\n\n- El nombre de la hoja de datos como valor del argumento `data`.\n- El nombre de la variable como valor del argumento `y`.\n:::\n\n:::{#exr-1numerical-boxplot}\nRealiza un diagrama de caja y bigotes para la longitud de las alas de los pingüinos.\n:::\n\n",
    "supporting": [
      "1numerical_files/figure-pdf"
    ],
    "filters": []
  }
}
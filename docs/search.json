[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Exploración y visualización de datos con Python",
    "section": "",
    "text": "Inicio\n\n\n\n\nMcKinney, Wes. 2010. «Data Structures for Statistical Computing in Python». En Proceedings of the 9th Python in Science Conference, editado por Stéfan van der Walt y Jarrod Millman, 56-61. https://doi.org/ 10.25080/Majora-92bf1922-00a .\n\n\nThe pandas development team. 2020. «pandas-dev/pandas: Pandas». Zenodo. https://doi.org/10.5281/zenodo.3509134.\n\n\nWaskom, Michael L. 2021. «seaborn: statistical data visualization». Journal of Open Source Software 6 (60): 3021. https://doi.org/10.21105/joss.03021."
  },
  {
    "objectID": "chapters/libraries.html#pandas",
    "href": "chapters/libraries.html#pandas",
    "title": "1  Librerías",
    "section": "1.1 pandas",
    "text": "1.1 pandas\n\n\n\n\n\npandas es una librería que permite leer datos almacenados en estructuras similares a una tabla, como las hojas de cálculo o los archivos CSV, y proporciona métodos para explorar y describir esos datos.\nUsando esta librería podremos calcular por ejemplo el peso medio de los pingüinos de cada especie. Obtendremos esta tabla:\n\n\nspecies\nAdelie       3700.662252\nChinstrap    3733.088235\nGentoo       5076.016260\nName: body_mass_g, dtype: float64\n\n\nPuedes consultar la documentación oficial de pandas aquí."
  },
  {
    "objectID": "chapters/libraries.html#seaborn",
    "href": "chapters/libraries.html#seaborn",
    "title": "1  Librerías",
    "section": "1.2 seaborn",
    "text": "1.2 seaborn\n\n\n\n\n\nseaborn es una librería para visualización de datos. Permite crear gráficos estadísticos muy informativos y visualmente atractivos con pocas líneas de código. Y está diseñado para trabajar con las estructuras de datos creadas con pandas.\nUsaremos seaborn para realizar diferentes tipos de gráficos como diagramas de barras, histogramas, diagramas de caja y bigotes etc.\nAprenderemos por ejemplo a crear el siguiente gráfico, con los diagramas de caja y bigotes para el peso de los pingüinos de cada especie.\n\n\n\n\n\nPuedes consultar la documentación oficial de seaborn aquí. \n\n\n\n\nMcKinney, Wes. 2010. «Data Structures for Statistical Computing in Python». En Proceedings of the 9th Python in Science Conference, editado por Stéfan van der Walt y Jarrod Millman, 56-61. https://doi.org/ 10.25080/Majora-92bf1922-00a .\n\n\nThe pandas development team. 2020. «pandas-dev/pandas: Pandas». Zenodo. https://doi.org/10.5281/zenodo.3509134.\n\n\nWaskom, Michael L. 2021. «seaborn: statistical data visualization». Journal of Open Source Software 6 (60): 3021. https://doi.org/10.21105/joss.03021."
  },
  {
    "objectID": "chapters/data.html#importar-los-datos",
    "href": "chapters/data.html#importar-los-datos",
    "title": "2  Datos",
    "section": "2.1 Importar los datos",
    "text": "2.1 Importar los datos\nComo se indicó en la introducción, los datos con los que vamos a trabajar están disponibles en la web en un fichero de formato CSV.\nEjecuta las instrucciones a continuación para importar el archivo usando la función read_csv() y guardar el resultado en una variable de nombre penguins:\n\nurl = \"https://raw.githubusercontent.com/mwaskom/seaborn-data/master/penguins.csv\"\npenguins = pd.read_csv(url)\n\nEl objeto penguins que acabas de crear es una hoja de datos, representada en pandas con la clase DataFrame.\n\ntype(penguins)\n\npandas.core.frame.DataFrame\n\n\nEn los siguientes apartados aprenderás a realizar una exploración inicial de la hoja de datos penguins que acabas de crear para conocer su estructura y la información que contiene."
  },
  {
    "objectID": "chapters/data.html#dimensiones",
    "href": "chapters/data.html#dimensiones",
    "title": "2  Datos",
    "section": "2.2 Dimensiones",
    "text": "2.2 Dimensiones\nUna hoja de datos es una estructura matricial o tabular que contiene datos organizados por filas y columnas.\nPara saber las dimensiones de nuestra hoja de datos penguins consulta su propiedad shape:\n\npenguins.shape\n\n(344, 7)\n\n\nVemos que nuestra hoja de datos tiene 344 filas y 7 columnas."
  },
  {
    "objectID": "chapters/data.html#sec-head-tail",
    "href": "chapters/data.html#sec-head-tail",
    "title": "2  Datos",
    "section": "2.3 Primeras y últimas filas",
    "text": "2.3 Primeras y últimas filas\nCon las siguientes instrucciones puedes visualizar las cinco primeras y últimas filas de la hoja de datos penguins que acabas de crear.\n\npenguins.head(5)\n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\n\n\n\n\n0\nAdelie\nTorgersen\n39.1\n18.7\n181.0\n3750.0\nMALE\n\n\n1\nAdelie\nTorgersen\n39.5\n17.4\n186.0\n3800.0\nFEMALE\n\n\n2\nAdelie\nTorgersen\n40.3\n18.0\n195.0\n3250.0\nFEMALE\n\n\n3\nAdelie\nTorgersen\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n4\nAdelie\nTorgersen\n36.7\n19.3\n193.0\n3450.0\nFEMALE\n\n\n\n\n\n\n\n\npenguins.tail(5)\n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\n\n\n\n\n339\nGentoo\nBiscoe\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n340\nGentoo\nBiscoe\n46.8\n14.3\n215.0\n4850.0\nFEMALE\n\n\n341\nGentoo\nBiscoe\n50.4\n15.7\n222.0\n5750.0\nMALE\n\n\n342\nGentoo\nBiscoe\n45.2\n14.8\n212.0\n5200.0\nFEMALE\n\n\n343\nGentoo\nBiscoe\n49.9\n16.1\n213.0\n5400.0\nMALE"
  },
  {
    "objectID": "chapters/data.html#estructura",
    "href": "chapters/data.html#estructura",
    "title": "2  Datos",
    "section": "2.4 Estructura",
    "text": "2.4 Estructura\nEn nuestra hoja de datos penguins:\n\nCada columna representa una variable asociada a una propiedad o característica de los pingüinos. Por ejemplo, la primera columna, de nombre species indica la especie (Chinstrap, Adélie o Gentoo) de pingüino. En el siguiente apartado se describen las otras seis variables.\nCada fila se corresponde con un pingüino concreto de los \\(344\\) seleccionados en el estudio.\nCada celda contiene el valor de la característica del pingüino en la correspondiente fila.\n\nPor ejemplo, mirando la primera fila de la hoja de datos\n\n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\n\n\n\n\n0\nAdelie\nTorgersen\n39.1\n18.7\n181.0\n3750.0\nMALE\n\n\n\n\n\n\n\nvemos en la primera celda que el primer pingüino del listado es de la especie Adelie.\nUnos mismos datos pueden organizarse o presentarse de diferentes maneras en diferentes hojas de datos. Para que sea sencillo trabajar con una hoja de datos es conveniente que haya una relación clara entre su significado y su estructura. Se considera que la hoja de datos está ordenada o limpia (en inglés se habla de tidy data) si está organizada de acuerdo con los siguientes principios:\n\nCada columna representa una variable o característica de interés.\nCada fila representa una observación, caso o unidad experimental.\nCada celda contiene un valor, el de la variable en la correspondiente columna para la observación en la correspondiente fila.\n\nDe acuerdo con la descripción inicial, nuestra hoja de datos cumple con los principios anteriores."
  },
  {
    "objectID": "chapters/data.html#variables",
    "href": "chapters/data.html#variables",
    "title": "2  Datos",
    "section": "2.5 Variables",
    "text": "2.5 Variables\nEjecuta la siguiente instrucción:\n\npenguins.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 344 entries, 0 to 343\nData columns (total 7 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   species            344 non-null    object \n 1   island             344 non-null    object \n 2   bill_length_mm     342 non-null    float64\n 3   bill_depth_mm      342 non-null    float64\n 4   flipper_length_mm  342 non-null    float64\n 5   body_mass_g        342 non-null    float64\n 6   sex                333 non-null    object \ndtypes: float64(4), object(3)\nmemory usage: 18.9+ KB\n\n\nLa salida del método info() nos da una tabla con información sobre las siete variables de nuestra hoja de datos.\n\n2.5.1 Descripción\nEn la columna de la tabla de nombre Column se lista el nombre de las siete variables en penguins. El significado de las variables es el siguiente:\n\n\n\n\n\n\n\nNombre\nDescripción\n\n\n\n\nspecies\nEspecie de pingüinos (Chinstrap, Adélie o Gentoo)\n\n\nisland\nNombre de la isla del archipíelago Palmer (Dream, Torgersen o Biscoe)\n\n\nbill_length_mm\nLongitud del pico, en milímetros (ver Figura 2.1)\n\n\nbill_depth_mm\nAnchura del pico, en milímetros (ver Figura 2.1)\n\n\nflipper_length_mm\nLongitud de las alas\n\n\nbody_mass_g\nPeso en gramos\n\n\nsex\nSexo (MALE o FEMALE)\n\n\n\n\n\n\nFigura 2.1: Ilustración de las variables bill_length_mm y bill_depth_mm (Artista @allison_horst)\n\n\nVolviendo a mirar la primera fila de nuestra hoja de datos\n\n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\n\n\n\n\n0\nAdelie\nTorgersen\n39.1\n18.7\n181.0\n3750.0\nMALE\n\n\n\n\n\n\n\nahora sabes que el primer pingüino es de la especie Adelie, vive en la isla Torgensen, las dimensiones de su pico son \\(39.1 \\times 18.7\\) milímetros, sus alas miden \\(181\\) milímetros, pesa \\(3\\) kilos y \\(750\\) gramos, y es un macho.\n\nEjercicio 2.1 Describe las características del tercer pingüino del estudio (índice 2).\n\n\n\n\n2.5.2 Valores nulos\nFíjate ahora en la columna Non-Null Count de la salida del método info():\n\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 344 entries, 0 to 343\nData columns (total 7 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   species            344 non-null    object \n 1   island             344 non-null    object \n 2   bill_length_mm     342 non-null    float64\n 3   bill_depth_mm      342 non-null    float64\n 4   flipper_length_mm  342 non-null    float64\n 5   body_mass_g        342 non-null    float64\n 6   sex                333 non-null    object \ndtypes: float64(4), object(3)\nmemory usage: 18.9+ KB\n\n\nLos valores nulos o perdidos son valores no disponibles, que no han podido registrarse, se representan con el símbolo NaN (iniciales de Not A Number).\nSi vuelves a mirar las cinco primeras filas de la hoja de datos verás que para el cuarto pingüino sólo sabemos que es de la especie Adelie y vive el la isla Torgersen, y se desconocen las otras cinco variables.\n\n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\n\n\n\n\n3\nAdelie\nTorgersen\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n\n\n\nLos diferentes métodos de la librería pandas contemplan la posibilidad de que las hojas de datos tengan valores nulos y los tratan de un forma predeterminada (por ejemplo, la media los ignora por defecto).\n\n\n2.5.3 Tipos de variables\nLas siete variables de nuestra hoja de datos se dividen en dos clases:\n\nspecies, island y sex son variables categóricas. Este tipo de variables representan una característica cualitativa que puede tomar un número finito y fijo de valores, denominados categorías o niveles.\nLas cuatro restantes, bill_length_mm, bill_depth_mm, flipper_length_mm y body_mass_g son variables numéricas, que representan características cuantitativas que se describen con valores numéricos (números enteros o reales).\n\npandas asigna un tipo a cada variable de una hoja de datos en función de los valores que presenta, como puede verse en la columna Dtype de la salida del método info():\n\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 344 entries, 0 to 343\nData columns (total 7 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   species            344 non-null    object \n 1   island             344 non-null    object \n 2   bill_length_mm     342 non-null    float64\n 3   bill_depth_mm      342 non-null    float64\n 4   flipper_length_mm  342 non-null    float64\n 5   body_mass_g        342 non-null    float64\n 6   sex                333 non-null    object \ndtypes: float64(4), object(3)\nmemory usage: 18.9+ KB"
  },
  {
    "objectID": "chapters/data.html#índice",
    "href": "chapters/data.html#índice",
    "title": "2  Datos",
    "section": "2.6 Índice",
    "text": "2.6 Índice\nIgual que cada columna (variable) en una hoja de datos tiene un nombre, cada fila (observación) también tiene una etiqueta identificativa. En nuestra hoja de datos cada uno de los \\(344\\) pingüinos se identifica con un número entero de la secuencia 0, 1, …, 333.\n\n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\n\n\n\n\n0\nAdelie\nTorgersen\n39.1\n18.7\n181.0\n3750.0\nMALE\n\n\n1\nAdelie\nTorgersen\n39.5\n17.4\n186.0\n3800.0\nFEMALE\n\n\n2\nAdelie\nTorgersen\n40.3\n18.0\n195.0\n3250.0\nFEMALE\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\n\n\n\n\n341\nGentoo\nBiscoe\n50.4\n15.7\n222.0\n5750.0\nMALE\n\n\n342\nGentoo\nBiscoe\n45.2\n14.8\n212.0\n5200.0\nFEMALE\n\n\n343\nGentoo\nBiscoe\n49.9\n16.1\n213.0\n5400.0\nMALE\n\n\n\n\n\n\n\nLas etiquetas identificativas de las filas de una hoja de datos forman su índice. El índice de una hoja de datos de pandas se registra en su propiedad index.\n\npenguins.index\n\nRangeIndex(start=0, stop=344, step=1)\n\n\nSi cada pingüino estuviera identificado por un código, podríamos haber indicado esa variable como índice en el momento de la importación de los datos. Cuando no se indica el índice de una hoja de datos de forma explícita, pandas asigna una secuencia de números enteros comenzando en 0, como ha ocurrido en nuestro caso.\n\n\n\n\nMcKinney, Wes. 2010. «Data Structures for Statistical Computing in Python». En Proceedings of the 9th Python in Science Conference, editado por Stéfan van der Walt y Jarrod Millman, 56-61. https://doi.org/ 10.25080/Majora-92bf1922-00a .\n\n\nThe pandas development team. 2020. «pandas-dev/pandas: Pandas». Zenodo. https://doi.org/10.5281/zenodo.3509134.\n\n\nWaskom, Michael L. 2021. «seaborn: statistical data visualization». Journal of Open Source Software 6 (60): 3021. https://doi.org/10.21105/joss.03021."
  },
  {
    "objectID": "chapters/subset-variables.html#sec-subset-one-variable",
    "href": "chapters/subset-variables.html#sec-subset-one-variable",
    "title": "3  Seleccionar variables",
    "section": "3.1 Seleccionar una variable",
    "text": "3.1 Seleccionar una variable\nUtiliza la siguiente instrucción para seleccionar la variable body_mass_g:\n\nmass = penguins[\"body_mass_g\"]\n\n\n\n\n\n\n\nPara seleccionar una sola variable, usa corchetes [] e indica el nombre de la columna de interés.\n\n\n\nAhora podemos aplicar la función max() para obtener el peso máximo:\n\nmass.max()\n\n6300.0\n\n\nVemos que el pingüino más pesado del estudio pesa \\(6\\) kilos y \\(300\\) gramos.\n\nPodemos realizar las dos operaciones anteriores, seleccionar la variable body_mass_g, y calcular su máximo con una sola instrucción:\n\npenguins[\"body_mass_g\"].max()\n\n6300.0\n\n\nObtenemos el mismo resultado de antes.\n\nEjercicio 3.1 Calcula el peso medio de todos los pingüinos (función mean()).\n\n\nEjercicio 3.2 Calcula el valor mínimo para la longitud de las alas de todos los pingüinos (función min())."
  },
  {
    "objectID": "chapters/subset-variables.html#sec-subset-several-variables",
    "href": "chapters/subset-variables.html#sec-subset-several-variables",
    "title": "3  Seleccionar variables",
    "section": "3.2 Seleccionar una lista de variables",
    "text": "3.2 Seleccionar una lista de variables\nPara seleccionar las dos variables relativas a las dimensiones del pico, bill_length_mm y bill_depth_mm, ejecuta la siguiente instrucción:\n\nbill = penguins[[\"bill_length_mm\", \"bill_depth_mm\"]]\n\n\n\n\n\n\n\nPara seleccionar una lista de variables, usa corchetes [] adicionales para crear la lista con los nombres de las columnas de interés (los corchetes exteriores indican que se van a seleccionar datos y los interiores crean la lista).\n\n\n\nAhora podemos calcular la media para ambas variables con\n\nbill.mean()\n\nbill_length_mm    43.92193\nbill_depth_mm     17.15117\ndtype: float64\n\n\nVemos que los picos de los pingüinos tiene una longitud media de \\(43.92\\) milímetros y una anchura media de \\(17.15\\) milímetros.\n\nEjercicio 3.3 Calcula el número de observaciones no nulas (función count()) para las variables species y body_mass_g con una sola línea de código.\n\n\n\n\n\n\nMcKinney, Wes. 2010. «Data Structures for Statistical Computing in Python». En Proceedings of the 9th Python in Science Conference, editado por Stéfan van der Walt y Jarrod Millman, 56-61. https://doi.org/ 10.25080/Majora-92bf1922-00a .\n\n\nThe pandas development team. 2020. «pandas-dev/pandas: Pandas». Zenodo. https://doi.org/10.5281/zenodo.3509134.\n\n\nWaskom, Michael L. 2021. «seaborn: statistical data visualization». Journal of Open Source Software 6 (60): 3021. https://doi.org/10.21105/joss.03021."
  },
  {
    "objectID": "chapters/1categorical.html#sec-1categorical-describe",
    "href": "chapters/1categorical.html#sec-1categorical-describe",
    "title": "4  Una variable categórica",
    "section": "4.1 El método describe()",
    "text": "4.1 El método describe()\nPara obtener la información más relevante sobre la distribución de las especies de pingüinos aplicamos a species el método describe():\n\nspecies.describe()\n\ncount        344\nunique         3\ntop       Adelie\nfreq         152\nName: species, dtype: object\n\n\nDe la salida anterior obtenemos la siguiente información sobre la variable species:\n\n\n\n\n\n\n\nFragmento de la salida\nSignificado\n\n\n\n\ncount   344\nHay \\(344\\) valores no nulos, así que se conoce la especie de todos los pingüinos del estudio.\n\n\nunique    3\nLa variable toma tres valores diferentes, es decir, hay tres categorías (las tres especies Adelie, Chinstrap y Gentto).\n\n\ntop  Adelie\nLa categoría top o más frecuente, es decir, la especie más numerosa es la especie Adelie.\n\n\nfreq    152\nEl número de pingüinos de la especie Adelie (la categoría top) es \\(152\\).\n\n\n\n\nEjercicio 4.1 Utiliza el método describe() para obtener información sobre la distribución de los pingüinos por islas."
  },
  {
    "objectID": "chapters/1categorical.html#sec-value-counts",
    "href": "chapters/1categorical.html#sec-value-counts",
    "title": "4  Una variable categórica",
    "section": "4.2 Tabla de recuentos",
    "text": "4.2 Tabla de recuentos\nYa sabemos que la especie más numerosa es Adelie, con \\(152\\) pingüinos, pero aún no sabemos cuántos pingüinos hay de las otras dos especies, Chinstrap y Gentoo. Para obtener una tabla con el número de pingüinos de cada especie usamos la función value_counts():\n\nspecies.value_counts()\n\nAdelie       152\nGentoo       124\nChinstrap     68\nName: species, dtype: int64\n\n\nAhora sabemos que la segunda especie más numerosa es Gentoo, con 124 ejemplares, y que solo hay 68 pingüinos de la especie Chinstrap.\n\nEjercicio 4.2 Determina el número total de hembras y de machos."
  },
  {
    "objectID": "chapters/1categorical.html#diagrama-de-recuentos",
    "href": "chapters/1categorical.html#diagrama-de-recuentos",
    "title": "4  Una variable categórica",
    "section": "4.3 Diagrama de recuentos",
    "text": "4.3 Diagrama de recuentos\nUn diagrama de recuentos asocia a cada categoría una barra de longitud igual al número de observaciones en esa categoría.\nPara realizar un diagrama del recuento de pingüinos por especie usamos la función countplot() del paquete seaborn\n\nsns.countplot(data=penguins, x=\"species\");\n\n\n\n\n\n\n\n\n\n\nSi quitas el punto y coma ; al final de la instrucción anterior aparecerá el mensaje\n&lt;AxesSubplot:xlabel='count', ylabel='species'&gt;\nen la salida antes del gráfico.\nAl terminar una instrucción con punto y coma ; se inhibe la impresión de la salida.\n\n\n\nNota que las alturas de las barras en el gráfico anterior coindicen con los recuentos que hemos calculado en el apartado anterior con value_counts().\nA veces es preferible usar barras horizontales, porque se tiene más especio para las etiquetas de las categorías.\n\nsns.countplot(data=penguins, y=\"species\");\n\n\n\n\n\n\n\n\n\n\nPara realizar un diagrama de recuentos de las categorías de una variable categórica, usa la función countplot() deseaborn. E indica:\n\nEl nombre de la hoja de datos como valor del argumento data.\nEl nombre de la variable categórica como valor del argumento x si quieres barras verticales, o como valor del argumento y si quieres barras horizontales.\n\n\n\n\n\nEjercicio 4.3 Crea un diagrama de recuentos para el número de hembras y machos, con barras verticales.\n\n\nEjercicio 4.4 Crea un diagrama de recuentos para el número de pingüinos en cada isla, con barras horizontales."
  },
  {
    "objectID": "chapters/1categorical.html#personalización-de-los-gráficos-opcional",
    "href": "chapters/1categorical.html#personalización-de-los-gráficos-opcional",
    "title": "4  Una variable categórica",
    "section": "4.4 Personalización de los gráficos (opcional)",
    "text": "4.4 Personalización de los gráficos (opcional)\nLos gráficos de la librería seaborn admiten muchas opciones para personalizar su aspecto cambiando por ejemplo los colores, los rótulos de los ejes, etc.\nLa personalización de los gráficos no carece de importancia, siendo especialmente relevante dar títulos descriptivos a los ejes. Pero en esta práctica nos centraremos en los procedimientos para realizar los gráficos y en la mayoría de ocasiones omitiremos los detalles de personalización de los mismos, que pueden consultarse en la documentación de seaborn.\nEn este apartado se da una muestra de las opciones para personalizar los diagramas de recuentos que se han presentado en el apartado anterior. Se trata de un apartado opcional y puedes por ahora omitir su lectura y volver a él al final de la sesión.\n\n4.4.1 Colores\nSi quieres un mismo color para todas las barras usa en argumento color:\n\nsns.countplot(data=penguins, x=\"species\", color=\"steelblue\");\n\n\n\n\nPuedes ver los colores disponibles aquí.\nTambién se puede indicar una secuencia de colores usando el argumento palette:\n\nsns.countplot(data=penguins, x=\"species\", palette=[\"steelblue\", \"coral\", \"gold\"]);\n\n\n\n\nComo valor para palette se puede indicar una lista de colores, como en el ejemplo anterior, o el nombre de una de las paletes predefinidas (deep, muted, pastel, bright, dark y colorblind), como en el siguiente ejemplo:\n\nsns.countplot(data=penguins, x=\"species\", palette=\"colorblind\");\n\n\n\n4.4.2 Rótulos\nCon el siguiente código personalizamos los títulos de los ejes y damos un título global al gráfico\n\nax = sns.countplot(data=penguins, x=\"species\")\nax.set(\n    title=\"Número de pingüinos de cada especie\",\n    xlabel=\"Especie\", \n    ylabel=\"Número de pingüinos\"\n);\n\n\n\n\n\n\n\n\n\n\n4.4.3 Orden de los niveles\nSi te fijas en los gráficos que has hecho hasta ahora, apreciarás que las categorías aparecen en los gráficos en el mismo orden en el que aparecen en las filas de la hoja de datos.\nSi quieres un orden personalizado para las categorías puedes usar el argumento order, como en el siguiente ejemplo:\n\nsns.countplot(data=penguins, x=\"species\", order = ['Chinstrap', 'Adelie', 'Gentoo']);\n\n\n\n\nCon el siguiente código ordenamos las categorías de mayor a menor frecuencia.\n\nsns.countplot(data=penguins, x=\"species\", order = species.value_counts().index);\n\n\n\n\n\n\n\n\nMcKinney, Wes. 2010. «Data Structures for Statistical Computing in Python». En Proceedings of the 9th Python in Science Conference, editado por Stéfan van der Walt y Jarrod Millman, 56-61. https://doi.org/ 10.25080/Majora-92bf1922-00a .\n\n\nThe pandas development team. 2020. «pandas-dev/pandas: Pandas». Zenodo. https://doi.org/10.5281/zenodo.3509134.\n\n\nWaskom, Michael L. 2021. «seaborn: statistical data visualization». Journal of Open Source Software 6 (60): 3021. https://doi.org/10.21105/joss.03021."
  },
  {
    "objectID": "chapters/1numerical.html#sec-1numerical-describe",
    "href": "chapters/1numerical.html#sec-1numerical-describe",
    "title": "5  Una variable numérica",
    "section": "5.1 El método describe()",
    "text": "5.1 El método describe()\nEl método describe() que usamos en la sección anterior para una variable categórica, también puede aplicarse a variables numéricas.\nSi lo aplicamos a mass obtenemos el siguiente resultado:\n\nmass.describe()\n\ncount     342.000000\nmean     4201.754386\nstd       801.954536\nmin      2700.000000\n25%      3550.000000\n50%      4050.000000\n75%      4750.000000\nmax      6300.000000\nName: body_mass_g, dtype: float64\n\n\nLa información que obtenemos de la salida anterior sobre la distribución del peso de los pingüinos es la siguiente:\n\n\n\n\n\n\n\nFragmento de la salida\nSignificado\n\n\n\n\ncount     342.000000\nHay 342 valores no nulos, así que no se conoce el peso de dos pingüinos.\n\n\nmean     4201.754386\nEl peso medio de los pingüinos es \\(4\\) kilogramos y \\(201\\) gramos.\n\n\nstd       801.954536\nLa desviación estandar del peso de los pinguinos es \\(801\\) gramos.\n\n\nmin      2700.000000\nEl pingüino que menos pesa, pesa \\(2\\) kilos y \\(700\\) gramos.\n\n\n25%      3550.000000\nEl \\(25\\%\\) de los pingüinos pesa menos de \\(3\\) kilos y \\(550\\) gramos (y el \\(75\\%\\) restante más). Este valor se conoce como cuantil 0.25 o primer cuartil.\n\n\n50%      4050.000000\nEl \\(50\\%\\) de los pingüinos pesa menos de \\(4\\) kilos y \\(50\\) gramos (y el \\(50\\%\\) restante más). Este valor se llama cuantil 0.5, segundo cuartil o mediana.\n\n\n75%      4750.000000\nEl \\(75\\%\\) de los pingüinos pesa menos de \\(4\\) kilos y \\(750\\) gramos (y el \\(25\\%\\) restante más). Este valor se llama cuantil 0.75 o tercer cuartil.\n\n\nmax      6300.000000\nEl pingüino que más pesa, pesa \\(6\\) kilos y \\(300\\) gramos.\n\n\n\n\nEjercicio 5.1 Utiliza el método describe() para obtener información sobre la distribución de la longitud de las alas de los pingüinos."
  },
  {
    "objectID": "chapters/1numerical.html#sec-1numerical-histogram",
    "href": "chapters/1numerical.html#sec-1numerical-histogram",
    "title": "5  Una variable numérica",
    "section": "5.2 Histograma",
    "text": "5.2 Histograma\n\nLos histogramas son uno de los gráficos más comunes e informativos para describir la distribución de una variable continua. Para crear un histograma se representa en el eje x el rango de valores de la variable, se divide ese rango en intervalos de la misma longitud, y se dibuja para cada intervalo una barra de altura igual al número de valores que caen en ese intervalo.\nEl siguiente código crea un histograma para el peso de los pingüinos:\n\nsns.histplot(data=penguins, x=\"body_mass_g\");\n\n\n\n\n\n\n\n\n\n\nPara realizar un histograma usa la función histplot() del paquete seaborn, e indica:\n\nEl nombre de la hoja de datos como valor del argumento data.\nEl nombre de la variable como valor del argumento x.\n\n\n\n\n\nEjercicio 5.2 Realiza un histograma para la longitud de las alas de los pingüinos."
  },
  {
    "objectID": "chapters/1numerical.html#diagrama-de-caja-y-bigotes",
    "href": "chapters/1numerical.html#diagrama-de-caja-y-bigotes",
    "title": "5  Una variable numérica",
    "section": "5.3 Diagrama de caja y bigotes",
    "text": "5.3 Diagrama de caja y bigotes\n\nOtro tipo de gráficos para variables numéricas son los llamados diagramas de caja o de caja y bigotes.\nEjecuta el siguiente código para crear un diagrama de caja y bigotes para el peso de los pingüinos.\n\nsns.boxplot(data=penguins, y=\"body_mass_g\");\n\n\n\n\nLa caja se construye usando los cuartiles de la variable.\nY los bigotes se extienden desde los extremos de la caja hasta los valores mínimo y máximo, exceptuando los valores que se clasifican como outliers.\n\n\n\n\n\n\nSi llegas el primero a este punto de la práctica, avísame para que explique el criterio que se usa para determinar los outliers, y haga un diagrama de caja y bigotes en el que aparezca un outlier.\n\n\n\n\n\n\n\n\n\nPara realizar un diagrama de caja y bigotes usa la función boxplot() del paquete seaborn e indica:\n\nEl nombre de la hoja de datos como valor del argumento data.\nEl nombre de la variable como valor del argumento y.\n\n\n\n\n\nEjercicio 5.3 Realiza un diagrama de caja y bigotes para la longitud de las alas de los pingüinos.\n\n\n\n\n\nMcKinney, Wes. 2010. «Data Structures for Statistical Computing in Python». En Proceedings of the 9th Python in Science Conference, editado por Stéfan van der Walt y Jarrod Millman, 56-61. https://doi.org/ 10.25080/Majora-92bf1922-00a .\n\n\nThe pandas development team. 2020. «pandas-dev/pandas: Pandas». Zenodo. https://doi.org/10.5281/zenodo.3509134.\n\n\nWaskom, Michael L. 2021. «seaborn: statistical data visualization». Journal of Open Source Software 6 (60): 3021. https://doi.org/10.21105/joss.03021."
  },
  {
    "objectID": "chapters/groupby.html#ejemplo-1-primeras-filas-de-cada-especie",
    "href": "chapters/groupby.html#ejemplo-1-primeras-filas-de-cada-especie",
    "title": "6  Agrupar por categorías",
    "section": "Ejemplo 1: Primeras filas de cada especie",
    "text": "Ejemplo 1: Primeras filas de cada especie\nPara ver los datos de los tres primeros pingüinos de cada especie, ejecuta la instrucción siguiente:\n\npenguins.groupby(\"species\").head(3)\n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\n\n\n\n\n0\nAdelie\nTorgersen\n39.1\n18.7\n181.0\n3750.0\nMALE\n\n\n1\nAdelie\nTorgersen\n39.5\n17.4\n186.0\n3800.0\nFEMALE\n\n\n2\nAdelie\nTorgersen\n40.3\n18.0\n195.0\n3250.0\nFEMALE\n\n\n152\nChinstrap\nDream\n46.5\n17.9\n192.0\n3500.0\nFEMALE\n\n\n153\nChinstrap\nDream\n50.0\n19.5\n196.0\n3900.0\nMALE\n\n\n154\nChinstrap\nDream\n51.3\n19.2\n193.0\n3650.0\nMALE\n\n\n220\nGentoo\nBiscoe\n46.1\n13.2\n211.0\n4500.0\nFEMALE\n\n\n221\nGentoo\nBiscoe\n50.0\n16.3\n230.0\n5700.0\nMALE\n\n\n222\nGentoo\nBiscoe\n48.7\n14.1\n210.0\n4450.0\nFEMALE\n\n\n\n\n\n\n\nObserva que en la salida anterior se muestran:\n\nlas filas de índices \\(0\\), \\(1\\) y \\(2\\) correspondientes a los tres primeros pingüinos de la especie Adelie\nlas filas de índices \\(152\\), \\(153\\) y \\(154\\) correspondientes a los tres primeros pingüinos de la especie Chinstrap\ny las filasde índices \\(220\\), \\(221\\) y \\(222\\) correspondientes a los tres primeros pingüinos de la especie Gentoo.\n\nAnalicemos, paso por paso, lo que ocurre al ejecutar la instrucción penguins.groupby(\"species\").head(3):\n\npenguins.groupby(\"species\") parte la hoja de datos penguins en tres grupos correspondientes a las tres especies. Esta operación devuelve un objeto de un nuevo tipo llamado DataFrameGroupBy:\n\ntype(penguins.groupby(\"species\"))\n\npandas.core.groupby.generic.DataFrameGroupBy\n\n\nPuedes pensar que después de aplicar groupby() tenemos los datos virtualmente divididos en tres hojas de datos:\n\nuna hoja de datos con las \\(152\\) filas de los pingüinos de la especie Adelie\notra con las \\(68\\) filas de los pingüinos de la especie Chinstrap\ny una tercera con las \\(124\\) filas de los pingüinos de la especie Gentoo.\n\nAl aplicar head(3) sobre la hoja de datos agrupada creada con penguins.groupby(\"species\"), el efecto es que se aplica head(3) en cada uno de los tres grupos (como si se aplicara en cada una de las tres hojas de datos virtuales que ha creado groupby() a partir de penguins).\nLa salida que hemos obtenenido es la combinación de los tres resultados en los tres grupos."
  },
  {
    "objectID": "chapters/groupby.html#ejemplo-2-peso-máximo-de-cada-especie",
    "href": "chapters/groupby.html#ejemplo-2-peso-máximo-de-cada-especie",
    "title": "6  Agrupar por categorías",
    "section": "Ejemplo 2: Peso máximo de cada especie",
    "text": "Ejemplo 2: Peso máximo de cada especie\nPara obtener el peso máximo de cada especie ejecuta\n\npenguins[[\"species\", \"body_mass_g\"]].groupby(\"species\").max()\n\n\n\n\n\n\n\n\nbody_mass_g\n\n\nspecies\n\n\n\n\n\nAdelie\n4775.0\n\n\nChinstrap\n4800.0\n\n\nGentoo\n6300.0\n\n\n\n\n\n\n\nVemos que:\n\nel peso máximo entre los pingüinos de la especie Adelie es de \\(4\\) kg y \\(775\\) gramos.\nel peso máximo entre los pingüinos de la especie Chinstrap es de \\(4\\) kg y \\(800\\) gramos.\nel peso máximo entre los pingüinos de la especie Gentto (y entre todos los pingüinos) es de \\(6\\) kg y \\(300\\) gramos.\n\nAnalicemos la instrucción anterior paso por paso:\n\nComo nos interesa el peso máximo por especie, primero hemos escrito penguins[[\"species\", \"body_mass_g\"]], para seleccionar las dos variables asociadas a las características de interés, species y body_mass_g, conforme aprendimos en la Sección 3.2.\nDespués groupby(\"species\") divide la selección de la hoja de datos del paso anterior en tres grupos para cada especie.\nmax() aplicada a la hoja de datos por grupos (de tipo DataFrameGroupBy) creada en el paso anterior, calcula el máximo en cada uno de los grupos para cada especie.\nLa salida que hemos obtenido es una tabla con los tres pesos máximos.\n\n\nEn las hojas de datos agrupadas por categorías (objetos de tipo DataFrameGroupBy) también funcionan los mecanismos de selección de variables usando corchetes []. Así, una forma equivalente de calcular el peso máximo de cada especie sería:\n\npenguins.groupby(\"species\")[\"body_mass_g\"].max()\n\nspecies\nAdelie       4775.0\nChinstrap    4800.0\nGentoo       6300.0\nName: body_mass_g, dtype: float64\n\n\nLos pasos seguidos en esta segunda variante serían:\n\ngroupby(\"species\") crea los tres grupos o categorías definidos por la variable species.\n[\"body_mass_g\"] selecciona la variable con el peso de los pingüinos en cada grupo.\nmax() calcula el máximo en cada grupo."
  },
  {
    "objectID": "chapters/groupby.html#ejemplo-3-recuento-del-número-de-pingüinos-de-cada-especie",
    "href": "chapters/groupby.html#ejemplo-3-recuento-del-número-de-pingüinos-de-cada-especie",
    "title": "6  Agrupar por categorías",
    "section": "Ejemplo 3: Recuento del número de pingüinos de cada especie",
    "text": "Ejemplo 3: Recuento del número de pingüinos de cada especie\nEl método value_counts() que usamos en la Sección 4.2 para obtener una tabla de recuentos del número de pingüinos de cada especie es en el fondo la combinación de una operación de agrupación y la aplicación del método count(). De hecho es equivalente a\n\npenguins.groupby(\"species\")[\"species\"].count()\n\nspecies\nAdelie       152\nChinstrap     68\nGentoo       124\nName: species, dtype: int64\n\n\n\nEjercicio 6.1 Combina los métodos groupby() y mean() para calcular el peso medio de los pingüinos que viven en cada isla.\n\n\nEjercicio 6.2 Combina los métodos groupby() y median() para calcular la mediana de la longitud del pico de las hembras y de los machos.\n\n\nEjercicio 6.3 Combina los métodos groupby() y value_counts() para calcular cuántos pingüinos de cada especie viven en cada isla.\nAnaliza el resultado para responder a las siguientes preguntas:\n\n¿cuál es la única especie de pingüinos presente en las tres islas?\n¿en qué islas viven los pingüinos de la especie Chinstrap?\n¿qué especies de pingüinos hay en la isla Biscoe?\n\n\n\n\n\n\nMcKinney, Wes. 2010. «Data Structures for Statistical Computing in Python». En Proceedings of the 9th Python in Science Conference, editado por Stéfan van der Walt y Jarrod Millman, 56-61. https://doi.org/ 10.25080/Majora-92bf1922-00a .\n\n\nThe pandas development team. 2020. «pandas-dev/pandas: Pandas». Zenodo. https://doi.org/10.5281/zenodo.3509134.\n\n\nWaskom, Michael L. 2021. «seaborn: statistical data visualization». Journal of Open Source Software 6 (60): 3021. https://doi.org/10.21105/joss.03021."
  },
  {
    "objectID": "chapters/numerical_by_categorical.html#el-método-describe",
    "href": "chapters/numerical_by_categorical.html#el-método-describe",
    "title": "7  Una variable numérica por categorías",
    "section": "7.1 El método describe()",
    "text": "7.1 El método describe()\nEl método describe() que usamos en la Sección 5.1 para obtener un resumen de la distribución del peso de todos los pingüinos, también puede aplicarse al peso agrupado por especies:\n\npenguins.groupby(\"species\")[\"body_mass_g\"].describe()\n\n\n\n\n\n\n\n\ncount\nmean\nstd\nmin\n25%\n50%\n75%\nmax\n\n\nspecies\n\n\n\n\n\n\n\n\n\n\n\n\nAdelie\n151.0\n3700.662252\n458.566126\n2850.0\n3350.0\n3700.0\n4000.0\n4775.0\n\n\nChinstrap\n68.0\n3733.088235\n384.335081\n2700.0\n3487.5\n3700.0\n3950.0\n4800.0\n\n\nGentoo\n123.0\n5076.016260\n504.116237\n3950.0\n4700.0\n5000.0\n5500.0\n6300.0\n\n\n\n\n\n\n\nVemos que obtenemos una tabla con el resultado combinado de aplicar el método describe() en el grupo de datos correspondiente a cada una de las tres especies.\nInterpretamos los resultados en las columnas de rótulo count, mean, 50% y max:\n\n\n\n\n\n\n\nFragmento de la salida\nSignificado\n\n\n\n\ncount\nDe la Sección 4.1 sabíamos que hay \\(152\\) pingüinos de la especie Adelie, \\(124\\) de la especie Gentoo, y \\(68\\) de la especie Chinstrap. Y de la Sección 5.1 sabíamos que se desconoce el peso de dos pingüinos. Ahora sabemos que esos dos pingüinos son uno de la especie Adelie y otro de la especie Gentoo, y que se conoce el peso de todos los pingüinos de la especie Chinstrap.\n\n\nmean\nEl peso medio de los pingüinos de la especie Gentoo es de \\(5\\) kilogramos y \\(76\\) gramos, superior a la media global de \\(4\\) kilos y \\(201\\) gramos (que conocíamos de la Sección 5.1). Y los pesos medios de las especies Adelie y Chinstrap son inferiores a la media global y muy similares: \\(3\\) kilos \\(700\\) gramos, y \\(3\\) kilos y \\(733\\) gramos respectivamente.\n\n\n50%\nLa mediana del peso es la misma para las especies Adelie y Chinstrap, \\(3\\) kilos y \\(700\\) gramos, y sustancialmente más grande, \\(5\\) kilos para la especie Gentoo.\n\n\nmax\nEl pingüino de mayor peso del estudio, con \\(6\\) kilos y \\(300\\) gramos, es de la especie Gentoo. Mientras que el peso máximo para las especies Adelie y Chinstrap no supera los \\(5\\) kilos (\\(4\\) kilos y \\(775\\) gramos y \\(4\\) kilos y \\(800\\) gramos respectivamente).\n\n\n\n\nEjercicio 7.1 Usa los métodos groupby() y describe() para responder a las siguientes preguntas:\n\nIndica el peso medio de hembras y machos y compáralos con el peso medio global.\n¿Cuál es el peso máximo de las hembras?\n¿Cuál es la mediana del peso de los machos?\nEl pingüino de mayor peso ¿es macho o hembra?"
  },
  {
    "objectID": "chapters/numerical_by_categorical.html#histogramas",
    "href": "chapters/numerical_by_categorical.html#histogramas",
    "title": "7  Una variable numérica por categorías",
    "section": "7.2 Histogramas",
    "text": "7.2 Histogramas\nEn este apartado aprenderemos a construir diferentes histogramas para comparar la distribución del peso de las tres especies de pingüinos.\n\n7.2.1 Histograma de barras apiladas\nPara crear un histograma del peso distinguiendo la especie mediante barras apiladas ejecuta la siguiente instrucción:\n\nsns.histplot(\n    data=penguins, \n    x=\"body_mass_g\", \n    hue=\"species\",\n    multiple=\"stack\"\n);\n\n\n\n\nObserva que la forma del diagrama es la misma que la del histograma que se realizó en la Sección 5.2. La novedad es que cada una de las barras que representa el número de pingüinos en cada uno de los intervalos de peso se ha fragmentado en tres barras indicando la contribución de cada especie. Aprecia que conforme va aumentando el peso, va disminuyendo la contribución de las especies Adelie (azul) y Chinstrap (naranja), y aumentando la contribución de la especie Gentoo (verde).\nCon el argumento hue=\"species\" conseguimos que los datos se dividan según las categorías de la variable species y se asigne un color diferente a cada categoría, que se indica en la leyenda de la esquina superior derecha del gráfico.\nY con el argumento multiple=\"stack\" indicamos que las barras de cada especie se dibujen apiladas en cada intervalo.\n\n\n\n\n\n\nPara crear un histograma de barras apiladas de una variable numérica por categorías, usa la función histplot() del paquete seaborn conforme aprendiste en la sección Sección 5.2 y además:\n\nindica el nombre de la variable que determina las categorías como valor del parámetro hue.\nusa multiple=\"stack\" para que las barras de las diferentes categorías se muestren apiladas.\n\n\n\n\n\nEjercicio 7.2 Crea un histograma de barras apiladas para el peso de los pingüinos por sexo.\n\n\n\n7.2.2 Histograma de barras separadas\nPara crear un histograma del peso con barras separadas para cada especie ejecuta la siguiente instrucción:\n\nsns.histplot(\n    data=penguins,  \n    x=\"body_mass_g\", \n    hue=\"species\",\n    multiple=\"dodge\"\n);\n\n\n\n\nEn este tipo de histograma fijándonos en las barras de un solo color vemos el histograma de la especie correspondiente.\n\n\n\n\n\n\nPara crear un histograma de barras separadas procede de la misma forma que para crear un histograma de barras apiladas pero cambia el valor del parámetro multiple a \"dodge\".\n\n\n\n\nEjercicio 7.3 Crea un histograma de barras separadas para la longitud del pico de los pingüinos por sexo.\n\n\n\n\n\n7.2.3 Mosaico de histogramas\nEn la próxima sesión aprenderás a realizar el siguiente mosaico de histogramas (con una sola línea de código):"
  },
  {
    "objectID": "chapters/numerical_by_categorical.html#diagramas-de-caja-y-bigotes",
    "href": "chapters/numerical_by_categorical.html#diagramas-de-caja-y-bigotes",
    "title": "7  Una variable numérica por categorías",
    "section": "7.3 Diagramas de caja y bigotes",
    "text": "7.3 Diagramas de caja y bigotes\nEn la próxima sesión aprenderás a realizar el siguiente gráfico comparativo de los diagramas de caja y bigotes del peso de cada especie (es el gráfico de la portada).\nRepasaremos el concepto de outliers para explicar los dos outliers que aparecen en la distribución del peso de los pingüinos de la especie Chinstrap.\n\n\n\n\n\n\n\n\n\nMcKinney, Wes. 2010. «Data Structures for Statistical Computing in Python». En Proceedings of the 9th Python in Science Conference, editado por Stéfan van der Walt y Jarrod Millman, 56-61. https://doi.org/ 10.25080/Majora-92bf1922-00a .\n\n\nThe pandas development team. 2020. «pandas-dev/pandas: Pandas». Zenodo. https://doi.org/10.5281/zenodo.3509134.\n\n\nWaskom, Michael L. 2021. «seaborn: statistical data visualization». Journal of Open Source Software 6 (60): 3021. https://doi.org/10.21105/joss.03021."
  },
  {
    "objectID": "chapters/references.html",
    "href": "chapters/references.html",
    "title": "Referencias",
    "section": "",
    "text": "Gorman, KB, TD Williams, and WR Fraser. 2014. “Ecological Sexual\nDimorphism and Environmental Variability Within a Community of Antarctic\nPenguins (Genus Pygoscelis).” PLoS ONE 9 (3). https://doi.org/10.1371/journal.pone.0090081.\n\n\nMcKinney, Wes. 2010. “Data Structures\nfor Statistical Computing in\nPython.” In Proceedings of the 9th\nPython in Science\nConference, edited by Stéfan van der Walt and Jarrod\nMillman, 56–61. https://doi.org/\n10.25080/Majora-92bf1922-00a .\n\n\nThe pandas development team. 2020. “Pandas-Dev/Pandas:\nPandas.” Zenodo. https://doi.org/10.5281/zenodo.3509134.\n\n\nWaskom, Michael L. 2021. “Seaborn: Statistical Data\nVisualization.” Journal of Open Source Software 6 (60):\n3021. https://doi.org/10.21105/joss.03021."
  }
]